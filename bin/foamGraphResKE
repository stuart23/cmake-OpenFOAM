#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     foamGraphResKE
#
# Description
#
#------------------------------------------------------------------------------
Script=${0##*/}

if [ ! -f "$1" ]; then
    echo "$Script: $1 is not a valid filename"
    exit 1
fi

tmpK=newK$$.dat
cat $1 | grep "Solving for k" | grep -v "solution singularity" | sed s/,//g | awk 'BEGIN { NENTRIES = 0 }{NENTRIES++; printf("%f %e\n", NENTRIES, $8)}' - > $tmpK

tmpEpsilon=newEpsilon$$.dat
cat $1 | grep "Solving for epsilon" | grep -v "solution singularity" | sed s/,//g | awk 'BEGIN { NENTRIES = 0 }{NENTRIES++; printf("%f %e\n", NENTRIES, $8)}' - > $tmpEpsilon

linesK=$(cat $tmpK | wc -l)
linesEpsilon=$(cat $tmpEpsilon | wc -l)

ngraphs=0

if [ "$linesK" -gt 1 ]; then
  ngraphs=$(($ngraphs+1))
fi

if [ "$linesEpsilon" -gt 1 ]; then
  ngraphs=$(($ngraphs+1))
fi

cat << EOF > residualKE.dat
Solver Performance
number of iterations
residual
0 0
0 0
$ngraphs
EOF

if [ "$linesK" -gt 1 ]; then
cat << EOF >> residualKE.dat
k
0
$linesK
EOF
cat $tmpK >> residualKE.dat
fi

if [ "$linesEpsilon" -gt 1 ]; then
cat << EOF >> residualKE.dat
epsilon
0
$linesEpsilon
EOF
cat $tmpEpsilon >> residualKE.dat
fi

rm $tmpK
rm $tmpEpsilon

#------------------------------------------------------------------------------
